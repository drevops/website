##
# Project environment variables.
#
# This is a single location where defined variables control how Scaffold
# operates and should be the primary place for modifications. Avoid overriding
# values in scripts or configuration files to simplify future updates and
# centralize changes.
#
# Values must be scalar and cannot reference another variable.
# Do not enclose values in double quotes unless they include spaces.
#
# To apply any changes made to this file, run `docker-compose up cli -d` or
# `ahoy up cli`.
#
# To customize variables locally, copy `.env.local.default` to `.env.local`.
#
# @see https://docs.drevops.com/workflows/variables

################################################################################
#                                  GENERAL                                     #
################################################################################

# Project name.
#
# Drives internal naming within the codebase.
# Does not affect the names of containers and development URL - those depend on
# the project directory and can be overridden with $COMPOSE_PROJECT_NAME.
DREVOPS_PROJECT=drevops-website

# Name of the webroot directory with Drupal codebase.
DREVOPS_WEBROOT=web

# The timezone for the containers.
DREVOPS_TZ="Australia/Melbourne"

################################################################################
#                                  DRUPAL                                      #
################################################################################

# Drupal profile name (used only when installing from profile).
DRUPAL_PROFILE=standard

# Drupal theme name.
DRUPAL_THEME=drevops

# Stage file proxy origin. Note that HTTP Auth provided by Shield will be
# automatically added to the origin URL.
DRUPAL_STAGE_FILE_PROXY_ORIGIN=https://www.drevops.com/

# Shield print message.
DRUPAL_SHIELD_PRINT="Restricted access."

# Enable Redis integration.
# See settings.redis.php for details.
DRUPAL_REDIS_ENABLED=0

# Enable ClamAV integration.
DRUPAL_CLAMAV_ENABLED=1

# ClamAV mode.
#
# Run ClamAV in either daemon mode by setting it to 0 (or 'daemon') or in
# executable mode by setting it to 1.
DRUPAL_CLAMAV_MODE=daemon

################################################################################
#                                 PROVISION                                    #
################################################################################

# Variables in this section control how the site is provisioned.
# @see https://docs.drevops.com/workflows/provision

# Set to 1 to install a site from profile instead of the database file dump.
DREVOPS_PROVISION_USE_PROFILE=0

# Overwrite existing database if it exists.
#
# Usually set to 0 in deployed environments and can be temporary set to 1 for
# a specific deployment.
# Set this to 1 in .env.local to override when developing locally.
DREVOPS_PROVISION_OVERRIDE_DB=0

# Skip database sanitization.
#
# Database sanitization is enabled by default in all non-production
# environments and is always skipped in the production environment.
DREVOPS_PROVISION_SANITIZE_DB_SKIP=0

# Sanitization email pattern. Sanitization is enabled by default in all
# non-production environments.
# @see https://docs.drevops.com/workflows/build#sanitization
DREVOPS_PROVISION_SANITIZE_DB_EMAIL="user_%uid@drevops.com"

# Put the site into a maintenance mode during site provisioning.
DREVOPS_PROVISION_USE_MAINTENANCE_MODE=1

################################################################################
#                                DATABASE                                      #
################################################################################

# Database service runs a single database within a container.
# See settings.php for database credentials defaults.

# Database can be imported from a file dump into an empty database started from
# the database default image or can exist in a pre-built container image.
# Defaults to importing from a file.
# @see https://docs.drevops.com/workflows/database

# Database dump directory.
DREVOPS_DB_DIR=./.data

# Database dump file name.
DREVOPS_DB_FILE=db.sql

# Name of the pre-built container image.
# Uncomment to use an image with a DB data loaded into it.
# @see https://github.com/drevops/mariadb-drupal-data to seed your DB image.
# DREVOPS_DB_IMAGE=

# Database can be sourced from one of the following locations:
#
# - `curl` - directly from URL as a file using CURL.
# - `ftp` - directly from FTP as a file using CURL.
# - `acquia` - from the latest Acquia backup via Cloud API as a file.
# - `lagoon` - from Lagoon main environment as a file.
# - `container_registry` - from the container registry as a container image.
# - `none` - not downloaded, site is freshly installed for every build.

# Note that "container_registry" works only for database-in-image
# database storage (when $DREVOPS_DB_IMAGE variable has a value).
DREVOPS_DB_DOWNLOAD_SOURCE=lagoon

# Environment to download the database from.
DREVOPS_DB_DOWNLOAD_ENVIRONMENT=prod


# Lagoon project name. May be different from $DREVOPS_PROJECT.
LAGOON_PROJECT=drevops-website

################################################################################
#                                DEPLOYMENT                                    #
################################################################################

# Deployment occurs when tests pass in the CI environment.
# @see https://docs.drevops.com/workflows/deployment

# The type of deployment.
#
# Combination of comma-separated values to support multiple deployment targets:
# `artifact`,`container_registry`, `webhook`, `lagoon`.
#
# See https://docs.drevops.com/workflows/deploy
DREVOPS_DEPLOY_TYPES=lagoon

# Dedicated branch to identify the production environment.
DREVOPS_LAGOON_PRODUCTION_BRANCH=main

################################################################################
#                                NOTIFICATIONS                                 #
################################################################################

# Notificaions are sent accross multiple channels before and after deployment.
# @see https://docs.drevops.com/workflows/notifications

# The channels of the notifications.
#
# Can be a combination of comma-separated values: email,newrelic,github,jira
DREVOPS_NOTIFY_CHANNELS=email

# Email to send notifications from.
DREVOPS_NOTIFY_EMAIL_FROM="webmaster@drevops.com"

# Email address(es) to send notifications to.
#
# Multiple names can be specified as a comma-separated list of email addresses
# with optional names in the format "email|name".
# Example: "to1@example.com|Jane Doe, to2@example.com|John Doe"
DREVOPS_NOTIFY_EMAIL_RECIPIENTS="webmaster@drevops.com|Webmaster"
